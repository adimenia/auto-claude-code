name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python-tools:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
        pip install pytest pytest-cov
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 tools/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 tools/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type checking with mypy
      run: |
        pip install mypy types-click
        mypy tools/ --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=tools --cov-report=xml
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  test-setup-tool:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
    
    - name: Test setup tool non-interactive mode
      run: |
        cd /tmp || cd $env:TEMP
        mkdir test-project
        cd test-project
        python ${{ github.workspace }}/tools/setup.py --non-interactive
        
    - name: Verify generated files
      run: |
        cd /tmp/test-project || cd $env:TEMP/test-project
        test -f CLAUDE.md || if exist CLAUDE.md echo "CLAUDE.md exists"
        test -f .claude/settings.json || if exist .claude\settings.json echo "settings.json exists"
        test -f setup.sh || if exist setup.sh echo "setup.sh exists"

  validate-templates:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
        pip install jsonschema
    
    - name: Validate all templates
      run: |
        python tools/validate-config.py templates/
    
    - name: Check JSON syntax
      run: |
        find templates/ -name "*.json" -exec python -m json.tool {} \; > /dev/null
    
    - name: Validate preset configurations
      run: |
        find presets/ -name "*.json" -exec python -m json.tool {} \; > /dev/null