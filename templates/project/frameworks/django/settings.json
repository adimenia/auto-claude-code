{
  "permissions": {
    "allow": [
      "Bash(python manage.py*)",
      "Bash(python -m django*)",
      "Bash(django-admin*)",
      "Bash(./manage.py*)",
      "Bash(python manage.py runserver*)",
      "Bash(python manage.py migrate*)",
      "Bash(python manage.py makemigrations*)",
      "Bash(python manage.py collectstatic*)",
      "Bash(python manage.py createsuperuser*)",
      "Bash(python manage.py shell*)",
      "Bash(python manage.py shell_plus*)",
      "Bash(python manage.py test*)",
      "Bash(python manage.py check*)",
      "Bash(python manage.py loaddata*)",
      "Bash(python manage.py dumpdata*)",
      "Bash(python manage.py flush*)",
      "Bash(python manage.py startapp*)",
      "Bash(python manage.py inspectdb*)",
      "Bash(python manage.py dbshell*)",
      "Bash(python manage.py showmigrations*)",
      "Bash(python manage.py squashmigrations*)",
      "Bash(pip install*)",
      "Bash(pip freeze*)",
      "Bash(poetry*)",
      "Bash(pipenv*)",
      "Bash(python -m pytest*)",
      "Bash(pytest*)",
      "Bash(python -m coverage*)",
      "Bash(coverage*)",
      "Bash(black*)",
      "Bash(isort*)",
      "Bash(flake8*)",
      "Bash(mypy*)",
      "Bash(bandit*)",
      "Bash(safety*)",
      "Bash(pre-commit*)",
      "Bash(gunicorn*)",
      "Bash(uwsgi*)",
      "Bash(celery*)",
      "Bash(redis-cli*)",
      "Bash(psql*)",
      "Bash(mysql*)",
      "Bash(sqlite3*)",
      "Bash(curl http://localhost:*)",
      "Bash(curl http://127.0.0.1:*)",
      "Bash(curl https://localhost:*)",
      "Bash(wget http://localhost:*)",
      "Bash(httpie*)",
      "Bash(http*localhost*)",
      "Bash(git add*)",
      "Bash(git commit*)",
      "Bash(git push*)",
      "Bash(git pull*)",
      "Bash(git status*)",
      "Bash(git diff*)",
      "Bash(git log*)",
      "Bash(git branch*)",
      "Bash(git checkout*)",
      "Bash(git merge*)",
      "Bash(git stash*)",
      "Bash(docker build*)",
      "Bash(docker run*)",
      "Bash(docker-compose*)",
      "Bash(docker compose*)",
      "Bash(npm*)",
      "Bash(yarn*)",
      "Bash(webpack*)",
      "Bash(sass*)",
      "Bash(lessc*)",
      "Bash(ls*)",
      "Bash(cat*)",
      "Bash(head*)",
      "Bash(tail*)",
      "Bash(grep*)",
      "Bash(find*)",
      "Bash(tree*)",
      "Bash(mkdir*)",
      "Bash(touch*)",
      "Bash(cp*)",
      "Bash(mv*)",
      "Bash(echo*)",
      "Bash(which*)",
      "Bash(python --version*)",
      "Bash(pip --version*)",
      "Bash(django-admin --version*)",
      "Edit(project_name/**)",
      "Edit(apps/**)",
      "Edit(*/migrations/**)",
      "Edit(*/models.py)",
      "Edit(*/views.py)",
      "Edit(*/forms.py)",
      "Edit(*/urls.py)",
      "Edit(*/admin.py)",
      "Edit(*/apps.py)",
      "Edit(*/serializers.py)",
      "Edit(*/tests.py)",
      "Edit(*/test_*.py)",
      "Edit(tests/**)",
      "Edit(templates/**)",
      "Edit(static/**)",
      "Edit(staticfiles/**)",
      "Edit(media/**)",
      "Edit(locale/**)",
      "Edit(*.py)",
      "Edit(*.html)",
      "Edit(*.css)",
      "Edit(*.scss)",
      "Edit(*.sass)",
      "Edit(*.less)",
      "Edit(*.js)",
      "Edit(*.ts)",
      "Edit(*.json)",
      "Edit(*.yml)",
      "Edit(*.yaml)",
      "Edit(*.toml)",
      "Edit(*.md)",
      "Edit(*.txt)",
      "Edit(*.po)",
      "Edit(*.pot)",
      "Edit(*.env*)",
      "Edit(.env.example)",
      "Edit(requirements.txt)",
      "Edit(requirements-dev.txt)",
      "Edit(pyproject.toml)",
      "Edit(Pipfile)",
      "Edit(setup.py)",
      "Edit(manage.py)",
      "Edit(wsgi.py)",
      "Edit(asgi.py)",
      "Edit(settings.py)",
      "Edit(*/settings/**)",
      "Edit(urls.py)",
      "Edit(.gitignore)",
      "Edit(README.md)",
      "Edit(Dockerfile)",
      "Edit(docker-compose.yml)",
      "Edit(.github/workflows/*)",
      "Edit(webpack.config.js)",
      "Edit(package.json)",
      "Edit(gulpfile.js)",
      "Edit(.pre-commit-config.yaml)",
      "Read"
    ],
    "deny": [
      "Bash(rm -rf*)",
      "Bash(sudo*)",
      "Bash(su*)",
      "Bash(chmod +x*)",
      "Bash(curl*://*/admin*)",
      "Bash(wget*://*/admin*)",
      "Bash(python manage.py migrate --fake*)",
      "Bash(python manage.py migrate --fake-initial*)",
      "Bash(python manage.py sqlflush*)",
      "Bash(python manage.py reset_db*)",
      "Bash(rm */migrations/*.py)",
      "Bash(rm migrations/*.py)",
      "Bash(git reset --hard*)",
      "Bash(git push --force*)",
      "Bash(git push -f*)",
      "Bash(docker run*--privileged*)",
      "Bash(docker exec*root*)",
      "Edit(.env)",
      "Edit(**/secrets/**)",
      "Edit(**/.ssh/**)",
      "Edit(/etc/**)",
      "Edit(/root/**)",
      "Edit(/home/*/.*)",
      "Bash(pip uninstall django*)",
      "Bash(pip uninstall psycopg2*)",
      "Bash(pip uninstall gunicorn*)",
      "Bash(*password*)",
      "Bash(*secret*)",
      "Bash(*api_key*)",
      "Bash(*token*)",
      "Bash(python manage.py runserver 0.0.0.0:*)",
      "Edit(*/migrations/0001_initial.py)",
      "Edit(db.sqlite3)",
      "Bash(python manage.py flush --noinput*)"
    ]
  },
  "env": {
    "PYTHONPATH": ".",
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONUNBUFFERED": "1",
    "DJANGO_SETTINGS_MODULE": "config.settings.local",
    "DEBUG": "True",
    "DJANGO_DEBUG": "True",
    "DJANGO_SECRET_KEY": "django-insecure-development-key-change-in-production"
  },
  "description": "Django web framework development configuration with database migrations, static files, testing, and admin interface",
  "framework": "django",
  "version": "1.0.0"
}