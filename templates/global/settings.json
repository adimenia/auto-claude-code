{
  "permissions": {
    "allow": [
      "_comment_git": "=== Git Operations (Essential) ===",
      "Bash(git status)",
      "Bash(git add*)",
      "Bash(git commit*)",
      "Bash(git push*)",
      "Bash(git pull*)",
      "Bash(git checkout*)",
      "Bash(git branch*)",
      "Bash(git merge*)",
      "Bash(git rebase*)",
      "Bash(git log*)",
      "Bash(git diff*)",
      "Bash(git stash*)",
      
      "_comment_python": "=== Python Development ===",
      "Bash(python*)",
      "Bash(python3*)",
      "Bash(pip install*)",
      "Bash(pip list*)",
      "Bash(pip show*)",
      "Bash(pip freeze*)",
      "Bash(pip check)",
      "Bash(python -m venv*)",
      "Bash(python -m pip*)",
      
      "_comment_testing": "=== Testing and Quality ===",
      "Bash(pytest*)",
      "Bash(python -m pytest*)",
      "Bash(coverage*)",
      "Bash(black*)",
      "Bash(isort*)",
      "Bash(flake8*)",
      "Bash(mypy*)",
      "Bash(bandit*)",
      "Bash(pre-commit*)",
      
      "_comment_package_managers": "=== Package Managers ===",
      "Bash(poetry*)",
      "Bash(pipenv*)",
      "Bash(conda*)",
      "Bash(mamba*)",
      "Bash(pyenv*)",
      
      "_comment_development": "=== Development Tools ===",
      "Bash(make*)",
      "Bash(npm run*)",
      "Bash(yarn run*)",
      "Bash(docker build*)",
      "Bash(docker run*)",
      "Bash(docker-compose*)",
      "Bash(docker ps*)",
      "Bash(docker logs*)",
      
      "_comment_databases": "=== Database Operations (Development) ===",
      "Bash(psql*)",
      "Bash(mysql*)",
      "Bash(sqlite3*)",
      "Bash(redis-cli*)",
      "Bash(mongo*)",
      
      "_comment_utilities": "=== Utility Commands ===",
      "Bash(ls*)",
      "Bash(cat*)",
      "Bash(head*)",
      "Bash(tail*)",
      "Bash(grep*)",
      "Bash(find*)",
      "Bash(which*)",
      "Bash(echo*)",
      "Bash(pwd)",
      "Bash(cd*)",
      "Bash(mkdir*)",
      "Bash(touch*)",
      "Bash(cp*)",
      "Bash(mv*)",
      "Bash(chmod*)",
      "Bash(curl -s*)",
      "Bash(wget*)",
      
      "_comment_files": "=== File Operations ===",
      "Edit(src/**)",
      "Edit(tests/**)",
      "Edit(test/**)",
      "Edit(docs/**)",
      "Edit(scripts/**)",
      "Edit(config/**)",
      "Edit(*.py)",
      "Edit(*.md)",
      "Edit(*.txt)",
      "Edit(*.json)",
      "Edit(*.yaml)",
      "Edit(*.yml)",
      "Edit(*.toml)",
      "Edit(*.cfg)",
      "Edit(*.ini)",
      "Edit(Makefile)",
      "Edit(Dockerfile)",
      "Edit(.gitignore)",
      "Edit(.env.example)",
      "Edit(requirements*.txt)",
      "Edit(pyproject.toml)",
      "Edit(setup.py)",
      "Edit(setup.cfg)",
      
      "_comment_read": "=== Read Operations ===",
      "Read(**/*.py)",
      "Read(**/*.md)",
      "Read(**/*.txt)",
      "Read(**/*.json)",
      "Read(**/*.yaml)",
      "Read(**/*.yml)",
      "Read(**/*.toml)",
      "Read(requirements*.txt)",
      "Read(.env.example)",
      "Read(.gitignore)",
      "Read(README*)",
      "Read(CHANGELOG*)",
      "Read(LICENSE*)"
    ],
    "deny": [
      "_comment_destructive": "=== Destructive Operations ===",
      "Bash(rm -rf*)",
      "Bash(rm -f*)",
      "Bash(sudo rm*)",
      "Bash(rmdir*)",
      "Bash(dd*)",
      "Bash(mkfs*)",
      "Bash(fdisk*)",
      
      "_comment_security": "=== Security Sensitive ===",
      "Edit(.env)",
      "Edit(.env.*)",
      "Edit(secrets/**)",
      "Edit(**/*secret*)",
      "Edit(**/*password*)",
      "Edit(**/*key*)",
      "Read(.env)",
      "Read(.env.*)",
      "Read(secrets/**)",
      "Read(**/*secret*)",
      "Read(**/*password*)",
      "Read(**/*private*)",
      
      "_comment_system": "=== System Administration ===",
      "Bash(sudo*)",
      "Bash(su*)",
      "Bash(chmod 777*)",
      "Bash(chown*)",
      "Bash(usermod*)",
      "Bash(passwd*)",
      "Bash(mount*)",
      "Bash(umount*)",
      
      "_comment_network": "=== Network Security ===",
      "Bash(curl -X POST*)",
      "Bash(curl -X PUT*)",
      "Bash(curl -X DELETE*)",
      "Bash(curl --data*)",
      "Bash(curl -d*)",
      "Bash(wget -O*)",
      "Bash(nc*)",
      "Bash(netcat*)",
      "Bash(telnet*)",
      
      "_comment_production": "=== Production Safety ===",
      "Bash(*production*)",
      "Bash(*prod*)",
      "Bash(kubectl delete*)",
      "Bash(kubectl apply*)",
      "Bash(terraform destroy*)",
      "Bash(aws s3 rm*)",
      "Bash(gcloud*delete*)",
      
      "_comment_packages": "=== Package Safety ===",
      "Bash(pip uninstall*)",
      "Bash(npm uninstall*)",
      "Bash(yarn remove*)",
      "Bash(poetry remove*)",
      "Bash(conda remove*)"
    ]
  },
  "env": {
    "_comment_claude": "=== Claude Code Configuration ===",
    "CLAUDE_CODE_ENABLE_TELEMETRY": "1",
    "CLAUDE_CODE_MAX_OUTPUT_TOKENS": "8000",
    "CLAUDE_CODE_DIFF_TOOL": "auto",
    
    "_comment_python": "=== Python Environment ===",
    "PYTHONPATH": "./src:./lib",
    "PYTHON_VERSION": "3.11",
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONUNBUFFERED": "1",
    "PIP_DISABLE_PIP_VERSION_CHECK": "1",
    
    "_comment_development": "=== Development Environment ===",
    "ENVIRONMENT": "development",
    "DEBUG": "true",
    "LOG_LEVEL": "INFO",
    "TESTING": "false",
    
    "_comment_tools": "=== Tool Configuration ===",
    "PYTEST_CURRENT_TEST": "1",
    "COVERAGE_THRESHOLD": "90",
    "BLACK_LINE_LENGTH": "88",
    "MYPY_CACHE_DIR": ".mypy_cache",
    "FLAKE8_MAX_LINE_LENGTH": "88",
    
    "_comment_performance": "=== Performance Settings ===",
    "ASYNC_WORKERS": "4",
    "MAX_CONNECTIONS": "100",
    "CACHE_TTL": "300",
    "REQUEST_TIMEOUT": "30",
    
    "_comment_paths": "=== Path Configuration ===",
    "PROJECT_ROOT": ".",
    "SRC_DIR": "./src",
    "TESTS_DIR": "./tests",
    "DOCS_DIR": "./docs",
    "SCRIPTS_DIR": "./scripts",
    "DATA_DIR": "./data",
    "LOGS_DIR": "./logs"
  },
  "cleanupPeriodDays": 30,
  "includeCoAuthoredBy": true,
  "preferredNotifChannel": "desktop",
  "theme": "dark",
  "maxConcurrentOperations": 3,
  "timeoutSeconds": 30,
  "logLevel": "INFO",
  "enableAutoSave": true,
  "autoCompactThreshold": 50,
  "enableContextPersistence": true
}